####
# Fluidd Config Overrides
##
[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 0.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 25.0  ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True  ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
# !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
gcode:



##############
## MACROS
##############
[gcode_macro START_PRINT]
description: Preheat, home, and prime nozzle
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(55)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}

  G28 ; HOME
  SCREWS_TILT_CALCULATE MAX_DEVIATION=0.06 ; abort if bed unlevel
  BED_MESH_PROFILE LOAD="default"

  M140 S{BED_TEMP}        ; start heating bed to temp

  {% if printer.extruder.temperature < 150 %}
    M104 S150             ; temporary nozzle temperature
    G4 S10                ; wait 10 seconds
  {% endif %}

  _HOME_PARK               ; move to a safe waiting position
  M190 S{BED_TEMP}        ; wait for bed temp
  M109 S{EXTRUDER_TEMP}   ; wait for nozzle temp

  # Prime Lines
  G90                     ; use absolute coordinates
  M83                     ; extruder relative mode
  G1 Z0.28 F240           ; move closer to bed
  G92 E0                  ; reset extruder
  G1 Y140 E10 F1500       ; draw first prime line
  G1 X2.3 F5000           ; move to the side slightly
  G1 Y10 E10 F1200        ; draw second prime line
  G92 E0                  ; reset extruder

  NOTIFY TEXT="{printer.print_stats.filename} is starting."

[gcode_macro END_PRINT]
description: End print and park toolhead in safe position
gcode:
  {% set MAX_Y = printer.toolhead.axis_maximum.y|float %}

  G92 E0                      ; reset extruder
  G1 E-1.0 F800               ; retract to avoid stringing

  _Z_SPACE

  G1 X5 Y{MAX_Y * 0.8} F3000  ; move print forward for presentation

  TURN_OFF_HEATERS
  M107                        ; turn off fan
  M84 X Y E                   ; disable motors

  NOTIFY TEXT="{printer.print_stats.filename} is complete."

[gcode_macro NOTIFY]
description: Send out a notification message
gcode:
  {% set MESS_TEXT = params.TEXT|default("Hello World") %}
  {action_call_remote_method("notify",
                             name="gotify_gcode",
                             message=MESS_TEXT)}


#####
# Internal utilities
##
[gcode_macro _HOME_PARK]
description: Move extruder to a parking position near home
gcode:
	{% if printer.homed_axes != 'XYZ' %}
		G28 ; home all if needed
	{% endif %}

  G1 Z30 F240 ; move up slightly to prevent oozing on bed
  G1 X2 Y10 F3000

[gcode_macro _Z_SPACE]
description: Move print head up to make space above print
gcode:
  {% set MAX_Z = printer.toolhead.axis_maximum.z|float %}
  {% set CURR_Z = printer.toolhead.position.z|float %}
  {% set LIFT = params.LIFT|default(40)|float %}

  {% if CURR_Z+LIFT < MAX_Z %}
    G1 Z{CURR_Z+LIFT} F600    ; move print head up
  {% endif %}
